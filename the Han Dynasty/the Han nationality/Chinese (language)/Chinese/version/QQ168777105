ata.LatestRoom.Value

                local CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom)]:WaitForChild("Doors汉化版")

                for i,v in ipairs(CurrentDoor.Parent:GetDescendants()) do

                    if v.Name == "密钥获取" then

                        HasKey = v

                    end

                end

                if HasKey then

                    game.Players.LocalPlayer.Character:PivotTo(CF(HasKey.Hitbox.Position))

                    task.wait(0.3)

                    fireproximityprompt(HasKey.ModulePrompt,0)

                    game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))

                    task.wait(0.3)

                    fireproximityprompt(CurrentDoor.Lock.UnlockPrompt,0)

                end

                if LatestRoom == 50 then

                    CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom+1)]:WaitForChild("Doors汉化版")

                end

                game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))

                task.wait(0.3)

                CurrentDoor.ClientOpen:FireServer()

            end

        end)

        end

end)

coroutine.resume(AutoSkipCoro)

 

GameTab:AddButton({

	Name = "没有跳跃恐慌",

	Callback = function()

        pcall(function()

            game:GetService("ReplicatedStorage").Bricks.Jumpscare:Destroy()

        end)

  	end    

})

GameTab:AddToggle({

	Name = "避免匆忙/伏击",

	Default = false,

    Flag = "避免匆忙切换",

    Save = true

})

GameTab:AddToggle({

	Name = "没有尖叫",

	Default = false,

    Flag = "尖叫开关",

    Save = true

})

 

GameTab:AddToggle({

	Name = "总是赢得心跳",

	Default = false,

    Flag = "心跳赢了",

    Save = true

})

 

GameTab:AddToggle({

	Name = "预测追逐",

	Default = false,

    Flag = "预测开关" ,

    Save = true

})

GameTab:AddToggle({

	Name = "当怪物出现时通知",

	Default = false,

    Flag = "移动开关" ,

    Save = true

})

GameTab:AddButton({

	Name = "完整的断路器盒迷你游戏",

	Callback = function()

        game:GetService("ReplicatedStorage").Bricks.EBF:FireServer()

  	end    

})

GameTab:AddButton({

	Name = "跳跃50级",

	Callback = function()

        local CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom+1)]:WaitForChild("Doors汉化版")

        game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))

  	end    

})

GameTab:AddParagraph("警告","您可能需要打开/关闭面板几次，这将很快修复。")

 

--// ok actual code starts here

 

game:GetService("RunService").RenderStepped:Connect(function()

    pcall(function()

        if game.Players.LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then

            game.Players.LocalPlayer.Character:TranslateBy(game.Players.LocalPlayer.Character.Humanoid.MoveDirection * TargetWalkspeed/50)

        end

    end)

end)

 

game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(function(descendant)

    if OrionLib.Flags["NoSeek"].Value == true and descendant.Name == ("Seek_Arm" or "ChandelierObstruction") then

        task.spawn(function()

            wait()

            descendant:Destroy()

        end)

    end

end)

 

game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)

    if OrionLib.Flags["InstantToggle"].Value == true then

        fireproximityprompt(prompt)

    end

end)

 

local oldold = hookmetamethod(game,"__namecall",newcclosure(function(self,...)

    local args = {...}

    local method = getnamecallmethod()

 

    if tostring(self) == 'Screech' and method == "FireServer" and OrionLib.Flags["ScreechToggle"].Value == true then

        args[1] = true

        return old(self,unpack(args))

    end

    if tostring(self) == 'ClutchHeartbeat' and method == "FireServer" and OrionLib.Flags["HeartbeatWin"].Value == true then

        args[2] = true

        return old(self,unpack(args))

    end

 

    return old(self,...)

end))

 

workspace.CurrentCamera.ChildAdded:Connect(function(child)

    if child.Name == "Screech" and OrionLib.Flags["ScreechToggle"].Value == true then

        child:Destroy()

    end

end)

 

local NotificationCoroutine = coroutine.create(function()

    LatestRoom.Changed:Connect(function()

        if OrionLib.Flags["PredictToggle"].Value == true then

            local n = ChaseStart.Value - LatestRoom.Value

            if 0 < n and n < 4 then

                OrionLib:MakeNotification({

                    Name = "警告！",

                    Content = "事件发生在" .. tostring(n) .. " 房间。",

                    Time = 5

                })

            end

        end

        if OrionLib.Flags["BookToggle"].Value == true then

            if LatestRoom.Value == 50 then

                coroutine.resume(BookCoroutine)

            end

        end

        if OrionLib.Flags["FigureToggle"].Value == true then

            if LatestRoom.Value == 50 then

                coroutine.resume(EntityCoroutine)

            endend

    end)

    workspace.ChildAdded:Connecttrue then

                OrionLib:MakeNotification({

                    Name = "警告！",

                    Content = "躲避伏击。请稍等。",

                    Time = 5

                })

                OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

                local con = game:GetService("RunService").Heartbeat:Connect(function()

                    game.Players.LocalPlayer.Character:MoveTo(OldPos + Vector3.new(0,20,0))

                end)

 

                inst.Destroying:Wait()

                con:Disconnect()

 

                game.Players.LocalPlayer.Character:MoveTo(OldPos)

            else

                OrionLib:MakeNotification({

                    Name = "警告！",

                    Content = "有埋伏了，躲起来！",

                    Time = 5

                })

            end

        end

    end)

end)

 

--// ok actual code ends here

 

local CreditsTab = Window:MakeTab({

	Name = "信用",

	Icon = "rbxassetid://4483345998",

	PremiumOnly = false

})

 

CreditsTab:AddParagraph("归功于","不祥的预感 - (从他们的帖子中获得了大部分想法，看看吧! - https://v3rmillion.net/showthread.php?tid=1184088)")

 

coroutine.resume(NotificationCoroutine)

 

OrionLib:Init()

 

task.wait(2)
